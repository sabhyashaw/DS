#include<stdio.h>

int partision(int a[], int lb, int ub);
void swap(int *a, int *b);
void quicksort(int a[], int lb, int ub) {
    if(lb < ub) {
        int p;
        p = partision(a, lb, ub);
        printf("%d \n", p);
        quicksort(a, lb, p - 1);
        quicksort(a, p + 1, ub);
    }
}

int partision(int a[], int lb, int ub) {
    int start, end, pivot;
    start = lb;
    end = ub;
    pivot = a[lb];

    while(start < end) {
        while(a[start] <= pivot)
            start++;
        while(a[end] > pivot)
            end--;
        if(start < end) {
            swap(&a[start], &a[end]);
        }
    }
    swap(&a[lb], &a[end]);
    return end;
}

void swap(int *a, int *b) {
    int c;
    c = *a;
    *a = *b;
    *b = c;
}

int main() {
    int i, n;
    printf("Enter the size of the array: ");
    scanf("%d", &n);
    int a[n];
    printf("Enter the array:\n");
    for(i = 0; i < n; i++)
        scanf("%d", &a[i]);

    quicksort(a, 0, n - 1);
    printf("The sorted array:\n");

    for(i = 0; i < n; i++)
        printf("%d ", a[i]);

    return 0;
}
